---
- name: Ensure apt keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Kubernetesâ€™s official GPG key
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/deb/Release.key
    keyring: "{{ kubernetes_repo_key }}"
    state: present

- name: Add Kubernetes apt repository
  ansible.builtin.apt_repository:
    filename: kubernetes
    repo: >-
      deb [signed-by={{ kubernetes_repo_key }}] https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/deb/ /
    state: present

- name: Install Kubernetes packages with pinned version
  ansible.builtin.apt:
    name: "{{ item }}={{ kubernetes_apt_version }}"
    update_cache: true
    state: present
  loop: "{{ kubernetes_packages }}"

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ kubernetes_packages }}"

- name: Create kubeadm-config file
  ansible.builtin.template:
    src: "{{ kubernetes_kubeadm_config_path }}.j2"
    dest: "/{{ kubernetes_kubeadm_config_path }}"
    owner: root
    group: root
    mode: "0600"

- name: Configure cloud-init
  block:
    - name: Create kubeadm-init script
      ansible.builtin.template:
        src: "{{ kubernetes_kubeadm_init_script_path }}.j2"
        dest: "/{{ kubernetes_kubeadm_init_script_path }}"
        owner: root
        group: root
        mode: "0740"

    - name: Create kubeadm-init service
      ansible.builtin.template:
        src: "{{ kubernetes_kubeadm_init_service_path }}.j2"
        dest: "/{{ kubernetes_kubeadm_init_service_path }}"
        owner: root
        group: root
        mode: "0640"

    - name: Create cloud-init k8s config
      ansible.builtin.copy:
        src: "{{ kubernetes_cloud_init_k8s_config_path }}"
        dest: "/{{ kubernetes_cloud_init_k8s_config_path }}"
        owner: root
        group: root
        mode: "0644"
